generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model business {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  item        item[]
}

model item {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String       @db.VarChar(255)
  category    String       @db.VarChar(255)
  business_id String?      @db.Uuid
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  business    business?    @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item  order_item[]
}

model order {
  id                                     String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id                            String?      @db.Uuid
  delivery_personnel_id                  String?      @db.Uuid
  status                                 String       @db.VarChar(255)
  created_at                             DateTime     @default(now()) @db.Timestamp(6)
  updated_at                             DateTime     @default(now()) @db.Timestamp(6)
  user_order_customer_idTouser           user?        @relation("order_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_order_delivery_personnel_idTouser user?        @relation("order_delivery_personnel_idTouser", fields: [delivery_personnel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item                             order_item[]
}

model order_item {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String?  @db.Uuid
  item_id    String?  @db.Uuid
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  item       item?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                      String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                   String     @unique @db.VarChar(255)
  firstName                               String?    @db.VarChar(255)
  lastName                                String?    @db.VarChar(255)
  roq_user_id                             String     @db.VarChar(255)
  tenant_id                               String     @db.VarChar(255)
  created_at                              DateTime   @default(now()) @db.Timestamp(6)
  updated_at                              DateTime   @default(now()) @db.Timestamp(6)
  business                                business[]
  order_order_customer_idTouser           order[]    @relation("order_customer_idTouser")
  order_order_delivery_personnel_idTouser order[]    @relation("order_delivery_personnel_idTouser")
}
